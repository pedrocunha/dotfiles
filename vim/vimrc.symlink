execute pathogen#infect()

set nocompatible                " choose no compatibility with legacy vi
syntax enable
set encoding=utf-8
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation
let &t_Co=256

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode
set list listchars=tab:→\ ,trail:·

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter
set cursorline

"" Limit syntax highlighting
set synmaxcol=200
set number " show line numbers

set statusline=%<%f\ (%{&ft})\ %-4(%m%)%=%-19(%3l,%02c%03V%)

set shell=/bin/sh

color hybrid

" ctrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_map = '<leader>t'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
let g:ctrlp_use_caching = 0
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>y :CtrlPTag<CR>

" Store temporary files in a central spot
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" Fix slow O inserts
:set timeout timeoutlen=1000 ttimeoutlen=100

" Delete buffers
nmap <leader>d <Plug>Kwbd

" Cycling between buffers
nnoremap <tab> :bn<CR>
nnoremap <s-tab> :bp<CR>

" Remove highlight
nnoremap q :nohl<CR>

nnoremap Q :quit<CR>

nnoremap <leader>/ :Explore .<cr>
nnoremap <leader>w :w<cr>
nnoremap <leader>f :tag <cword><cr>
nnoremap <leader>gb :Gblame<cr>
nnoremap <leader>cn :e ~/Dropbox/notes/coding-notes.txt<cr>

" vim-fugitive
nnoremap <leader>a :A<cr>
nnoremap <leader>v :AV<cr>


" RUBY + RAILS
" Set ruby syntax highlight
au BufRead,BufNewFile Gemfile* setfiletype ruby
au BufRead,BufNewFile *.ru setfiletype ruby

let g:vroom_cucumber_path = 'cucumber'
if filereadable("script/server")
  let g:vroom_spec_command = 'spec'
  let g:vroom_rspec_version = '1.x'
else
  let g:vroom_spec_command = 'rspec'
  let g:vroom_rspec_version = '3.x'
endif

" Highlight lines over 80 chars
highlight OverLength ctermbg=darkred ctermfg=white guibg=#FFD9D9
match OverLength /\%>80v.\+/

" Highlight extra whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Kill whitespace
function! TrimWhiteSpace()
  %s/\s\+$//e
endfunction
autocmd BufWritePre *.rb :call TrimWhiteSpace()
autocmd BufWritePre *.js :call TrimWhiteSpace()


